【版本问题】
React v18.0 2022年3月
Angular v18  2024年5月

【项目规模】
小型项目：一次性重写为 React 项目
中型项目：分模块重构 + 独立部署
大型项目：微前端（Module Federation）+ 逐步迁移组件和服务

一次性重构很难落地，周期长、风险高。
实践中大多数团队都选择：微前端 + 页面模块级迁移。

【迁移方法】
从 Angular 迁移到 React 是一个系统性工程，尤其是在大型项目中，因为两者在架构理念、模板语法、状态管理等方面差异较大。但通过合理的规划，可以渐进式迁移，并实现技术栈的平稳切换。

迁移步骤概览
步骤一：项目评估与分层
步骤二：搭建 React 构建环境
步骤三：渐进式嵌入（微前端可选）
步骤四：组件级迁移
步骤五：服务与数据迁移
步骤六：状态管理重建（如有）
步骤七：路由迁移
步骤八：测试迁移

Angular是全家桶框架，什么都有了。
React端比较自由，选择什么工具和库？

注意事项
React 没有内建的 DI、表单系统、国际化等，需组合第三方库。
Angular 的模块化结构需要用React 组件组合 + Context 模拟。
如需保留部分 RxJS，可封装为自定义 Hook 使用。

【迁移工具】
angular-to-react：实验性质转换工具。
AST 转换工具（如 jscodeshift 官方）可用于批量重构语法。
